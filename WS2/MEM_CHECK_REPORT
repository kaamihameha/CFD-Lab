==7360== Memcheck, a memory error detector
==7360== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==7360== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==7360== Command: ./lbsim cavity100.dat
==7360== 
==7360== Invalid write of size 8
==7360==    at 0x401234: initialiseFields(double*, double*, int*, int) (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==    by 0x4029D8: main (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==  Address 0xef99640 is 0 bytes after a block of size 152,000,000 alloc'd
==7360==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7360==    by 0x402986: main (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360== 
==7360== Invalid write of size 8
==7360==    at 0x4012E4: initialiseFields(double*, double*, int*, int) (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==    by 0x4029D8: main (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==  Address 0x1808f640 is 0 bytes after a block of size 152,000,000 alloc'd
==7360==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==7360==    by 0x4029A7: main (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360== 
==7360== 
==7360== Process terminating with default action of signal 11 (SIGSEGV)
==7360==  Access not within mapped region at address 0x18090000
==7360==    at 0x4012E4: initialiseFields(double*, double*, int*, int) (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==    by 0x4029D8: main (in /home/ravil/Documents/university/CFD/CFD-Lab/WS2/lbsim)
==7360==  If you believe this happened as a result of a stack
==7360==  overflow in your program's main thread (unlikely but
==7360==  possible), you can try to increase the size of the
==7360==  main thread stack using the --main-stacksize= flag.
==7360==  The main thread stack size used in this run was 8388608.
==7360== 
==7360== HEAP SUMMARY:
==7360==     in use at exit: 308,072,704 bytes in 4 blocks
==7360==   total heap usage: 4 allocs, 0 frees, 308,072,704 bytes allocated
==7360== 
==7360== LEAK SUMMARY:
==7360==    definitely lost: 0 bytes in 0 blocks
==7360==    indirectly lost: 0 bytes in 0 blocks
==7360==      possibly lost: 0 bytes in 0 blocks
==7360==    still reachable: 308,072,704 bytes in 4 blocks
==7360==         suppressed: 0 bytes in 0 blocks
==7360== Rerun with --leak-check=full to see details of leaked memory
==7360== 
==7360== For counts of detected and suppressed errors, rerun with: -v
==7360== ERROR SUMMARY: 991 errors from 2 contexts (suppressed: 0 from 0)
